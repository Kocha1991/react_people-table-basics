{"version":3,"sources":["components/Nav/Nav.tsx","components/Loader/Loader.tsx","components/Row/Row.tsx","components/Table/Table.tsx","components/BlockPeople/BlockPeople.tsx","api.ts","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Nav","className","role","to","Loader","Row","person","onSelectPerson","isSelected","motherSlug","fatherSlug","slug","motherName","sex","born","died","name","fatherName","undefined","onClick","Table","persons","useState","selectedPersonSlug","setSelectedPersonSlug","personNamesFromSlug","map","currPerson","toLowerCase","split","join","slice","getPersonsMotherSlug","fullName","formatedFullName","toLocaleLowerCase","replace","includes","personMother","find","getPersonsFatherSlug","personFather","ErrorTypes","BlockPeople","loading","error","Api","NotData","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","data","setData","isLoading","setIsLoading","setError","useEffect","fatchData","catch","length","finally","path","element","createRoot","document","getElementById","render"],"mappings":"0QAIMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC5D,cAAe,CAAE,8BAA+BD,GAD7B,EAIRE,EAAgB,WAC3B,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWJ,EACXM,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWJ,EACXM,GAAG,UAFL,0BAUT,ECjCYC,G,MAAS,kBACpB,qBAAKH,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCUTI,EAAuB,SAAC,GAM9B,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAGEC,EACEL,EADFK,KAAMC,EACJN,EADIM,WAAYC,EAChBP,EADgBO,IAAKC,EACrBR,EADqBQ,KAAMC,EAC3BT,EAD2BS,KAAMC,EACjCV,EADiCU,KAAMC,EACvCX,EADuCW,WAG3C,OACE,qBACE,UAAQ,SACRhB,UACEO,EAAa,8BAA2BU,EAH5C,UAOE,6BACE,cAAC,IAAD,CACEC,QAAS,kBAAMZ,EAAeI,EAArB,EACTR,GAAE,oBAAeG,EAAOK,MACxBV,UAAWQ,EAAa,uBAAoBS,EAH9C,SAKGF,MAIL,6BAAKH,IACL,6BAAKC,IACL,6BAAKC,IACL,6BACGN,EAEG,cAAC,IAAD,CACEN,GAAE,aAAQG,EAAOK,MACjBV,UAAWQ,EAAa,uBAAoBS,EAC5CC,QAAS,kBAAMV,GAAcF,EAAeE,EAAnC,EAHX,SAKGG,IAGHA,GAAc,MAEpB,6BACGF,EAEG,cAAC,IAAD,CACEP,GAAE,oBAAeG,EAAOK,MACxBQ,QAAS,kBAAMT,GAAcH,EAAeG,EAAnC,EAFX,SAIGO,IAGHA,GAAc,QAIzB,EC/DYG,EAAyB,SAAC,GAEhC,IADLC,EACI,EADJA,QAEA,EAAoDC,qBAApD,mBAAOC,EAAP,KAA2BC,EAA3B,KAEMC,EAAsBJ,EAAQK,KAAI,SAAAC,GAAU,OAAIA,EAAWhB,KAC9DiB,cAAcC,MAAM,KAAKC,KAAK,IAAIC,MAAM,GAAI,EADG,IAG5CC,EAAuB,SAACC,GAC5B,GAAKA,EAAL,CAIA,IAAMC,EAAmBD,EAASE,oBAAoBC,QAAQ,MAAO,IAGrE,GAFuBX,EAAoBY,SAASH,GAEpD,CAIA,IAAMI,EAAejB,EAAQkB,MAAK,SAAAjC,GAAM,OAAIA,EAAOU,OAASiB,CAApB,IAExC,cAAOK,QAAP,IAAOA,OAAP,EAAOA,EAAc3B,IAJpB,CAPA,CAYF,EAEK6B,EAAuB,SAACP,GAC5B,GAAKA,EAAL,CAIA,IAAMC,EAAmBD,EAASE,oBAAoBC,QAAQ,MAAO,IAGrE,GAFuBX,EAAoBY,SAASH,GAEpD,CAIA,IAAMO,EAAepB,EAAQkB,MAAK,SAAAjC,GAAM,OAAIA,EAAOU,OAASiB,CAApB,IAExC,cAAOQ,QAAP,IAAOA,OAAP,EAAOA,EAAc9B,IAJpB,CAPA,CAYF,EAED,OACE,wBACE,UAAQ,cACRV,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCAEGoB,EAAQK,KAAI,SAAApB,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,EACRE,WAAYF,EAAOK,OAASY,EAC5Bd,WAAYuB,EAAqB1B,EAAOM,YACxCF,WAAY8B,EAAqBlC,EAAOW,YACxCV,eAAgB,SAACI,GAAD,OAAUa,EAAsBb,EAAhC,GALXL,EAAOK,KAFG,QAc1B,EC7EW+B,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,2BAAYA,EAAZ,4CAAYA,CAAZ,MAWaC,EAA+B,SAAC,GAItC,IAHLtB,EAGI,EAHJA,QACAuB,EAEI,EAFJA,QACAC,EACI,EADJA,MAEA,OACE,qCACE,oBAAI5C,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG2C,GAAW,cAAC,EAAD,IAGVC,IAAUH,EAAWI,KAEnB,mBAAG,UAAQ,qBAAqB7C,UAAU,kBAA1C,SACGyC,EAAWI,MAMhBD,IAAUH,EAAWK,SAEnB,mBAAG,UAAQ,kBAAX,SACGL,EAAWK,UAKlB,cAAC,EAAD,CACE1B,QAASA,WAOpB,EC7CM,SAAS2B,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCLYQ,EAAM,WACjB,MAAwBnC,mBAAmB,IAA3C,mBAAOoC,EAAP,KAAaC,EAAb,KACA,EAAkCrC,oBAAkB,GAApD,mBAAOsC,EAAP,KAAkBC,EAAlB,KACA,EAA0BvC,mBAA4B,MAAtD,mBAAOuB,EAAP,KAAciB,EAAd,KAkBA,OAhBAC,qBAAU,WACRF,GAAa,GAEbb,IAAYK,MAAK,SAAAW,GACfL,EAAQK,EACT,IAAEC,OAAM,WACa,IAAhBP,EAAKQ,QACPJ,EAASpB,EAAWK,SAGjBW,GACHI,EAASpB,EAAWI,IAEvB,IAAEqB,SAAQ,kBAAMN,GAAa,EAAnB,GACZ,GAAE,IAGD,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM5D,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CACEmE,KAAK,IACLC,QAAS,oBAAIpE,UAAU,QAAd,8BAEX,cAAC,IAAD,CACEmE,KAAK,IACLC,QAAS,oBAAIpE,UAAU,QAAd,yBAEX,cAAC,IAAD,CACEmE,KAAK,UACLC,QACE,cAAC,EAAD,CACEhD,QAASqC,EACTd,QAASgB,EACTf,MAAOA,eAWxB,ECvDDyB,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.0ff4bdc7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Nav: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n  onSelectPerson: (slug: string) => void\n  isSelected: boolean\n  motherSlug?: string\n  fatherSlug?: string\n};\n\nexport const Row: React.FC<Props> = ({\n  person,\n  onSelectPerson,\n  isSelected,\n  motherSlug,\n  fatherSlug,\n}) => {\n  const {\n    slug, motherName, sex, born, died, name, fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        isSelected ? 'has-background-warning' : undefined\n      }\n    >\n\n      <td>\n        <Link\n          onClick={() => onSelectPerson(slug)}\n          to={`#/people/:${person.slug}`}\n          className={motherSlug ? 'has-text-danger' : undefined}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {motherSlug\n          ? (\n            <Link\n              to={`#/:${person.slug}`}\n              className={motherSlug ? 'has-text-danger' : undefined}\n              onClick={() => motherSlug && onSelectPerson(motherSlug)}\n            >\n              {motherName}\n            </Link>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {fatherSlug\n          ? (\n            <Link\n              to={`#/people/:${person.slug}`}\n              onClick={() => fatherSlug && onSelectPerson(fatherSlug)}\n            >\n              {fatherName}\n            </Link>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React, { useState } from 'react';\nimport { Person } from '../../types';\nimport { Row } from '../Row/Row';\n\ntype Props = {\n  persons: Person[]\n};\n\nexport const Table: React.FC<Props> = ({\n  persons,\n}) => {\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState<string>();\n\n  const personNamesFromSlug = persons.map(currPerson => currPerson.slug\n    .toLowerCase().split('-').join('').slice(0, -4));\n\n  const getPersonsMotherSlug = (fullName: string | null) => {\n    if (!fullName) {\n      return undefined;\n    }\n\n    const formatedFullName = fullName.toLocaleLowerCase().replace(/\\s/g, '');\n    const isMotherInList = personNamesFromSlug.includes(formatedFullName);\n\n    if (!isMotherInList) {\n      return undefined;\n    }\n\n    const personMother = persons.find(person => person.name === fullName);\n\n    return personMother?.slug;\n  };\n\n  const getPersonsFatherSlug = (fullName: string | null) => {\n    if (!fullName) {\n      return undefined;\n    }\n\n    const formatedFullName = fullName.toLocaleLowerCase().replace(/\\s/g, '');\n    const isFatherInList = personNamesFromSlug.includes(formatedFullName);\n\n    if (!isFatherInList) {\n      return undefined;\n    }\n\n    const personFather = persons.find(person => person.name === fullName);\n\n    return personFather?.slug;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {persons.map(person => (\n          <Row\n            key={person.slug}\n            person={person}\n            isSelected={person.slug === selectedPersonSlug}\n            motherSlug={getPersonsMotherSlug(person.motherName)}\n            fatherSlug={getPersonsFatherSlug(person.fatherName)}\n            onSelectPerson={(slug) => setSelectedPersonSlug(slug)}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Table } from '../Table/Table';\nimport { Person } from '../../types';\n\nexport enum ErrorTypes {\n  Api = 'Something went wrong',\n  NotData = 'There are no people on the server',\n}\n\ntype Props = {\n  persons: Person[]\n  loading: boolean\n  error: ErrorTypes | null\n};\n\nexport const BlockPeople: React.FC<Props> = ({\n  persons,\n  loading,\n  error,\n}) => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {\n            error === ErrorTypes.Api\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {ErrorTypes.Api}\n              </p>\n            )\n          }\n\n          {\n            error === ErrorTypes.NotData\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                {ErrorTypes.NotData}\n              </p>\n            )\n          }\n\n          <Table\n            persons={persons}\n          />\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Nav } from './components/Nav/Nav';\nimport { BlockPeople, ErrorTypes } from './components/BlockPeople/BlockPeople';\nimport { Person } from './types';\nimport { getPeople } from './api';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [data, setData] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<ErrorTypes | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople().then(fatchData => {\n      setData(fatchData);\n    }).catch(() => {\n      if (data.length === 0) {\n        setError(ErrorTypes.NotData);\n      }\n\n      if (!data) {\n        setError(ErrorTypes.Api);\n      }\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <Nav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route\n              path=\"/people\"\n              element={(\n                <BlockPeople\n                  persons={data}\n                  loading={isLoading}\n                  error={error}\n                />\n              )}\n            />\n\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}